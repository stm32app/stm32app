; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[env]
platform = ststm32
framework = libopencm3
lib_ldf_mode = deep+
upload_protocol = stlink
upload_flags = -c set CPUTAPID 0
build_flags = 
	-Isrc
	-Isrc/configs
	--static
	-Os
	-g
	-std=c99
	-mthumb
	-mcpu=cortex-m3
	-mfix-cortex-m3-ldrd
	-fno-common
	-ffunction-sections
	-fdata-sections
	-flto
	-nostartfiles
	-nostdlib
	-nodefaultlibs
	-DLFS_CONFIG=lfs_config.h
	-DCORU_CONFIG=coru_config.h
	-DCANOPEN_CONFIG=canopen_config.h
	-DCO_DRIVER_CUSTOM
	-DFREERTOS_CONFIG=freertos_config.h
	-DSQLITE_CUSTOM_INCLUDE=sqlite_config.h
	-DACTOR_CONFIG=actor_config.h
	-DHEAP_CONFIG=heap_config.h
src_build_flags=
	-Werror
	-Wno-error=unused-parameter
	-Wno-error=unused-function
	-Wextra
	-Wshadow
	-Wimplicit-function-declaration
	-Wredundant-decls
	-Wmissing-prototypes
	-Wstrict-prototypes
	-Wno-unused-parameter
src_filter = +<*> -<.git/> -<.svn/>  -<*/.example/> -<dictionaries/> -<definitions/> +<definitions/enums.*> +<definitions/dictionary.*> -<device/blank.*> -<screen/epaper.*> -<transport/modbus.*>

lib_deps = 
	FreeRTOS
	multi_heap
	CANopenNode
	CANopenCM3
	littlefs
	coru
	sqlite3
	actor_rtos

[debug]
debug_build_flags = 
	-Og -g2 -ggdb2 -DSEMIHOSTING -DDEBUG --specs=rdimon.specs -lrdimon -lnosys
debug_extra_cmds = 
	monitor arm semihosting enable
	set remotetimeout 100000
debug_init_break = tbreak vApplicationMallocFailedHook	
debug_tool = stlink
debug_port = :3333

[bluepill_f103c8]
board = genericSTM32F103CB
board_build.mcu = STM32F103C8T6

[black_f407zg]
board = black_f407zg

[env:f407zg_mothership]
extends = debug, black_f407zg
build_flags = ${env.build_flags} -DACTOR_MOTHERSHIP