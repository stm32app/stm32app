#ifndef INC_CORE_APP
#define INC_CORE_APP
/* Generic types for all apps.

Any app type can be cast to this type and get access to generic properties properties and objects */

#ifdef __cplusplus
extern "C" {
#endif

#include "CANopen.h"
#include "FreeRTOS.h"
#include "atomic.h"
#include "core/actor.h"
#include "core/thread.h"
#include "core/types.h"
#include "lib/debug.h"


/* Start of autogenerated OD types */
/* 0x3000: Core App
   Configuration of global object */
typedef struct app_properties {
    uint8_t parameter_count;
    uint32_t timer_index; // Index of a timer used for generic medium-precision scheduling (1us) 
    uint32_t storage_index;
    uint32_t mcu_index; // Main MCU device index 
    uint32_t canopen_index; // Main CANopen device 
    uint8_t phase;
} app_properties_t;
/* End of autogenerated OD types */

struct app {
    actor_t *actor;
    app_properties_t *properties;
    size_t actor_count;
    OD_t *dictionary;
    app_threads_t *threads;
    system_mcu_t *mcu;
    system_canopen_t *canopen;
    module_timer_t *timer;
    app_buffer_t *buffers;
};

enum app_signal {
    APP_SIGNAL_OK,
    APP_SIGNAL_FAILURE,

    APP_SIGNAL_TIMEOUT,
    APP_SIGNAL_TIMER,

    APP_SIGNAL_DMA_ERROR,
    APP_SIGNAL_DMA_TRANSFERRING,
    APP_SIGNAL_DMA_IDLE,

    APP_SIGNAL_RX_COMPLETE,
    APP_SIGNAL_TX_COMPLETE,

    APP_SIGNAL_CATCHUP,
    APP_SIGNAL_RESCHEDULE,
    APP_SIGNAL_INCOMING,
    APP_SIGNAL_BUSY,
    APP_SIGNAL_NOT_FOUND,
    APP_SIGNAL_UNCONFIGURED,
    APP_SIGNAL_INCOMPLETE,

    APP_SIGNAL_OUT_OF_MEMORY
};

// Initialize array of all actors found in OD that can be initialized
int app_allocate(app_t **app, OD_t *od, size_t (*enumerator)(app_t *app, OD_t *od, actor_t *actors));
// Destruct all actors and release memory
int app_free(app_t **app);
// Transition all actors to given state
void app_set_phase(app_t *app, actor_phase_t phase);

size_t app_actor_type_enumerate(app_t *app, OD_t *od, actor_class_t *class, actor_t *destination, size_t offset);

/* Find actor by index in the global list of registered actors */
actor_t *app_actor_find(app_t *app, uint16_t index);
/* Find actor by type in the global list of registered actors */
actor_t *app_actor_find_by_type(app_t *app, uint16_t type);
/* Return actor from a global array by its index */
actor_t *app_actor_find_by_number(app_t *app, uint8_t number);
/* Get numeric index of a actor in a global array */
uint8_t app_actor_find_number(app_t *app, actor_t *actor);

/* Create buffer that will hold other buffers in the app */
app_buffer_t *app_buffer_pool_allocate(app_t *app);

typedef enum app_properties_properties {
  CORE_APP_TIMER_INDEX = 0x1,
  CORE_APP_STORAGE_INDEX = 0x2,
  CORE_APP_MCU_INDEX = 0x3,
  CORE_APP_CANOPEN_INDEX = 0x4,
  CORE_APP_PHASE = 0x5
} app_properties_properties_t;

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif